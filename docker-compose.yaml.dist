version: "3.7"
services:
  node:
    container_name: "project-node"
    image: "tommynovember7/docker-node:node12"
    volumes:
      - "./project:/var/project"
      - "./docker/.volumes/npm:/root/.npm"
    working_dir: /var/project

  mongo:
    container_name: "project-mongo-db"
    image: mongo:4.2
    ports:
      - "27017:27017"
    volumes:
      - "./docker/.volumes/mongo/data/db:/data/db"
      - "./docker/.volumes/mongo/data/configdb:/data/configdb"
    command: "--noauth"

  mongo-express:
    container_name: "project-mongo-express"
    image: "mongo-express:0.54"
    restart: "on-failure"
    depends_on:
      - mongo

  mysql:
    container_name: "project-mysql"
    build:
      context: docker/mysql
      dockerfile: Dockerfile
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_ROOT_PASSWORD=
    ports:
      - "3306:3306"
    volumes:
      - "./docker/.volumes/mysql:/var/lib/mysql"
      - "./docker/.volumes/log:/var/log"
      - "./docker/sql:/docker-entrypoint-initdb.d"

  redis:
    container_name: "project-redis"
    image: redis:4
    volumes:
      - "./docker/.volumes/redis:/data"
    ports:
      - "6379:6379"

  smtp:
    container_name: "project-smtp"
    image: "schickling/mailcatcher:latest"
    
  nginx:
    container_name: "project-nginx"
    build:
      context: docker/nginx
      dockerfile: Dockerfile
    ports:
      - "443:443"
      - "80:80"
    depends_on:
      - "mongo-express"
      - "smtp"
    volumes:
      - "./project:/var/project"
      - "./docker/.volumes/log:/var/log"
